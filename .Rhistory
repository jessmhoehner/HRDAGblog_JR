complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts2_post$n <- ifelse(is.na(counts2_post$n), 0, counts2_post$n)
counts2_post %>%
write_delim(files$output4, delim="|")
knitr::opts_chunk$set(echo = TRUE)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,readr,assertr, ggplot2,scales,incidence,exactci)
files <- list(input1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
input2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
death2 <- readr::read_delim(files$input2, delim="|")
# compute daily incidence
date_case1<- incidence(death1$date, interval = 1 )
# plot
epiplot1<-
plot(date_case1, border = "black", show_cases =TRUE,
ylab = "Reported Deaths", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=3)
epiplot1
# compute daily incidence
date_case2<- incidence(death2$date, interval = 1 )
# plot
epiplot2<-
plot(date_case2, border = "black", show_cases=TRUE,
ylab = "Reported Deaths", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=5)
epiplot2
files <- list(cts1 = here::here("HRDAGblog_JR/test/output/counts1_pre.txt"),
cts2 = here::here("HRDAGblog_JR/test/output/counts1_post.txt"),
cts3 = here::here ("HRDAGblog_JR/test/output/counts2_pre.txt"),
cts4 = here::here ("HRDAGblog_JR/test/output/counts2_post.txt"))
cts1pre <- readr::read_delim(files$cts1, delim="|")
cts1post <- readr::read_delim(files$cts2, delim="|")
cts2pre <- readr::read_delim(files$cts3, delim="|")
cts2post <- readr::read_delim(files$cts4, delim="|")
# set 1
# mean deaths per day prior to 21 August 2019
mu1pre <- round(mean(cts1pre$n))
# maximum deaths per day folowing 21 August 2019
mu1post <- round(mean(cts1post$n))
#difference between them significant at 95% CI?
res1 <-poisson.test(mu1pre, 1, mu1post, alternative = "g", conf.level = 0.95)
res1
# set 2
# mean deaths per day prior to 21 August 2019
mu2pre <- round(mean(cts2pre$n))
# maximum deaths per day folowing 21 August 2019
mu2post <- round(mean(cts2post$n))
#difference between them
res2 <- poisson.test(mu2pre, 1, mu2post, alternative = "g", conf.level = 0.95)
res2
knitr::opts_chunk$set(echo = TRUE)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,readr,assertr, ggplot2,scales,incidence,exactci)
files <- list(input1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
input2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/clean/src/clean.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
files <- list(input1=here::here("HRDAGblog_JR/clean/input/death_data_1_122219.txt"),
input2=here::here("HRDAGblog_JR/clean/input/death_data_2_122219.txt"),
output1=here::here("HRDAGblog_JR/test/input/death1_clean.txt"),
output2=here::here("HRDAGblog_JR/test/input/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#set boundaries for date of interest
dt_boundary_21 <- as.Date("2019-08-21")
death1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status,dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death1 <-
filter(death1, status == "dead") %>%
write_delim(files$output1, delim="|")
setwd("~/HRDAGblog_JR/write/src")
knitr::opts_chunk$set(echo = TRUE)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,readr,assertr, ggplot2,scales,incidence,exactci)
files <- list(input1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
input2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/clean/src/clean.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
files <- list(input1=here::here("HRDAGblog_JR/clean/input/death_data_1_122219.txt"),
input2=here::here("HRDAGblog_JR/clean/input/death_data_2_122219.txt"),
output1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
output2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#set boundaries for date of interest
dt_boundary_21 <- as.Date("2019-08-21")
death1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status,dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death1 <-
filter(death1, status == "dead") %>%
write_delim(files$output1, delim="|")
stopifnot(ncol(death1) == 7 & (nrow (death1) == 105))
death2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status, dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death2 <-
filter(death2, status == "dead") %>%
write_delim(files$output2, delim="|")
stopifnot(ncol(death2) == 7 & (nrow (death2) == 678))
#specify getmode function
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
require(pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
files <- list(input1=here::here("HRDAGblog_JR/clean/input/death_data_1_122219.txt"),
input2=here::here("HRDAGblog_JR/clean/input/death_data_2_122219.txt"),
output1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
output2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#why did we want these in rds files?
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
#set boundaries for date of interest
dt_boundary_21 <- as.Date("2019-08-21")
death1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status,dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death1 <-
filter(death1, status == "dead") %>%
stopifnot(ncol(death1) == 7 & (nrow (death1) == 105)) %>%
write_delim(files$output1, delim="|")
death2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status, dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death2 <-
filter(death2, status == "dead") %>%
write_delim(files$output2, delim="|")
stopifnot(ncol(death2) == 7 & (nrow (death2) == 678))
#specify getmode function
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
######done####
setwd("~/HRDAGblog_JR/clean/src")
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/clean/src/clean.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
files <- list(input1=here::here("HRDAGblog_JR/clean/input/death_data_1_122219.txt"),
input2=here::here("HRDAGblog_JR/clean/input/death_data_2_122219.txt"),
output1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
output2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#set boundaries for date of interest
dt_boundary_21 <- as.Date("2019-08-21")
death1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status,dateb_20190821), as.factor)
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/clean/src/clean.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
files <- list(input1=here::here("clean/input/death_data_1_122219.txt"),
input2=here::here("clean/input/death_data_2_122219.txt"),
output1=here::here("clean/output/death1_clean.txt"),
output2=here::here("clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#set boundaries for date of interest
dt_boundary_21 <- as.Date("2019-08-21")
death1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status,dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death1 <-
filter(death1, status == "dead") %>%
stopifnot(ncol(death1) == 7 & (nrow (death1) == 105)) %>%
write_delim(files$output1, delim="|")
death1 <-
filter(death1, status == "dead")
death1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status,dateb_20190821), as.factor)
# retain only people with status "dead" and add in dates with no deaths
death1 <-
filter(death1, status == "dead") %>%
write_delim(files$output1, delim="|")
stopifnot(ncol(death1) == 7 & (nrow (death1) == 105))
death2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%Y/%m/%d")) %>%
mutate(dateb_20190821 = ifelse(date < dt_boundary_21, "pre", "post"))  %>%
mutate_at(vars(sex,status, dateb_20190821), as.factor)
#retain only people with status "dead" and add in dates with no deaths
death2 <-
filter(death2, status == "dead") %>%
write_delim(files$output2, delim="|")
stopifnot(ncol(death2) == 7 & (nrow (death2) == 678))
#specify getmode function
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
setwd("~/HRDAGblog_JR/test/src")
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/test/src/test.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,readr,assertr)
files <- list(input1 = here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
input2 = here::here("HRDAGblog_JR/clean/output/death2_clean.txt"),
output1 = here::here("HRDAGblog_JR/test/output/counts1_pre.txt"),
output2 = here::here("HRDAGblog_JR/test/output/counts1_post.txt"),
output3 = here::here ("HRDAGblog_JR/test/output/counts2_pre.txt"),
output4 = here::here ("HRDAGblog_JR/test/output/counts2_post.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
p_load(dplyr,styler,tidyverse,readr,assertr)
files <- list(input1 = here::here("clean/output/death1_clean.txt"),
input2 = here::here("clean/output/death2_clean.txt"),
output1 = here::here("test/output/counts1_pre.txt"),
output2 = here::here("test/output/counts1_post.txt"),
output3 = here::here ("test/output/counts2_pre.txt"),
output4 = here::here ("test/output/counts2_post.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
death2 <- readr::read_delim(files$input2, delim="|")
# set1
# before 21 August 2019
counts1_pre <- count(death1, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "pre") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts1_pre$n <- ifelse(is.na(counts1_pre$n), 0, counts1_pre$n)
counts1_pre %>%
#  stopifnot(dateb_20190821 == "pre") %>%
#  stopifnot(nrow(counts1_20190821) == 70) %>%
#  stopifnot(is.na(counts1_20190821$n) == FALSE) %>%
write_delim(files$output1, delim="|")
# after 21 August 2019
counts1_post <- count(death1, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "post") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts1_post$n <- ifelse(is.na(counts1_post$n), 0, counts1_post$n)
counts1_post %>%
write_delim(files$output2, delim="|")
# set 2
# before 21 August 2019
counts2_pre <- count(death2, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "pre") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts2_pre$n <- ifelse(is.na(counts2_pre$n), 0, counts2_pre$n)
counts2_pre %>%
write_delim(files$output3, delim="|")
# after 21 August 2019
counts2_post <- count(death2, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "post") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts2_post$n <- ifelse(is.na(counts2_post$n), 0, counts2_post$n)
counts2_post %>%
write_delim(files$output4, delim="|")
knitr::opts_chunk$set(echo = TRUE)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,readr,assertr, ggplot2,scales,incidence,exactci)
files <- list(input1=here::here("clean/output/death1_clean.txt"),
input2=here::here("clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
death2 <- readr::read_delim(files$input2, delim="|")
# compute daily incidence
date_case1<- incidence(death1$date, interval = 1 )
# plot
epiplot1<-
plot(date_case1, border = "black", show_cases =TRUE,
ylab = "Reported Deaths", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=3)
epiplot1
# compute daily incidence
date_case2<- incidence(death2$date, interval = 1 )
# plot
epiplot2<-
plot(date_case2, border = "black", show_cases=TRUE,
ylab = "Reported Deaths", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=5)
epiplot2
files <- list(cts1 = here::here("HRDAGblog_JR/test/output/counts1_pre.txt"),
cts2 = here::here("HRDAGblog_JR/test/output/counts1_post.txt"),
cts3 = here::here ("HRDAGblog_JR/test/output/counts2_pre.txt"),
cts4 = here::here ("HRDAGblog_JR/test/output/counts2_post.txt"))
cts1pre <- readr::read_delim(files$cts1, delim="|")
files <- list(cts1 = here::here("test/output/counts1_pre.txt"),
cts2 = here::here("test/output/counts1_post.txt"),
cts3 = here::here ("test/output/counts2_pre.txt"),
cts4 = here::here ("test/output/counts2_post.txt"))
cts1pre <- readr::read_delim(files$cts1, delim="|")
cts1post <- readr::read_delim(files$cts2, delim="|")
cts2pre <- readr::read_delim(files$cts3, delim="|")
cts2post <- readr::read_delim(files$cts4, delim="|")
# set 1
# mean deaths per day prior to 21 August 2019
mu1pre <- round(mean(cts1pre$n))
# maximum deaths per day folowing 21 August 2019
mu1post <- round(mean(cts1post$n))
#difference between them significant at 95% CI?
res1 <-poisson.test(mu1pre, 1, mu1post, alternative = "g", conf.level = 0.95)
res1
# set 2
# mean deaths per day prior to 21 August 2019
mu2pre <- round(mean(cts2pre$n))
# maximum deaths per day folowing 21 August 2019
mu2post <- round(mean(cts2post$n))
#difference between them
res2 <- poisson.test(mu2pre, 1, mu2post, alternative = "g", conf.level = 0.95)
res2
# set 1
# maximum deaths per day prior to 21 August 2019
max1_pre <- max(cts1pre$n)
# maximum deaths per day following 21 August 2019
max1_post <- max(cts1post$n)
# set 2
# maximum deaths per day prior to 21 August 2019
max2_pre <- max(cts2pre$n)
# maximum deaths per day following 21 August 2019
max2_post <- max(cts2post$n)
# likelihood of observing the maximum deaths/day given the mean
# set 1
like1pre<-poisson.test(mu1pre, 1, max1_pre, alternative = "g", conf.level = 0.95)
like1pre
like1post<-poisson.test(mu1post, 1, max1_post, alternative = "g", conf.level = 0.95)
like1post
# set 2
like2pre<-poisson.test(mu2pre, 1, max2_pre, alternative = "g", conf.level = 0.95)
like2pre
like2post<-poisson.test(mu2post, 1, max2_post, alternative = "g", conf.level = 0.95)
like2post
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/test/src/test.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,readr,assertr)
files <- list(input1 = here::here("clean/output/death1_clean.txt"),
input2 = here::here("clean/output/death2_clean.txt"),
output1 = here::here("test/output/counts1_pre.txt"),
output2 = here::here("test/output/counts1_post.txt"),
output3 = here::here ("test/output/counts2_pre.txt"),
output4 = here::here ("test/output/counts2_post.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
death2 <- readr::read_delim(files$input2, delim="|")
# set1
# before 21 August 2019
counts1_pre <- count(death1, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "pre") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts1_pre$n <- ifelse(is.na(counts1_pre$n), 0, counts1_pre$n)
counts1_pre %>%
#  stopifnot(dateb_20190821 == "pre") %>%
#  stopifnot(nrow(counts1_20190821) == 70) %>%
#  stopifnot(is.na(counts1_20190821$n) == FALSE) %>%
write_delim(files$output1, delim="|")
# after 21 August 2019
counts1_post <- count(death1, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "post") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts1_post$n <- ifelse(is.na(counts1_post$n), 0, counts1_post$n)
counts1_post %>%
write_delim(files$output2, delim="|")
# set 2
# before 21 August 2019
counts2_pre <- count(death2, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "pre") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts2_pre$n <- ifelse(is.na(counts2_pre$n), 0, counts2_pre$n)
counts2_pre %>%
write_delim(files$output3, delim="|")
# after 21 August 2019
counts2_post <- count(death2, dateb_20190821, DOD) %>%
filter (dateb_20190821 == "post") %>%
complete(DOD = seq.Date(min(DOD), max(DOD), by="day"))
#set NAs to 0
counts2_post$n <- ifelse(is.na(counts2_post$n), 0, counts2_post$n)
counts2_post %>%
write_delim(files$output4, delim="|")
files <- list(cts1 = here::here("test/output/counts1_pre.txt"),
cts2 = here::here("test/output/counts1_post.txt"),
cts3 = here::here ("test/output/counts2_pre.txt"),
cts4 = here::here ("test/output/counts2_post.txt"))
cts1pre <- readr::read_delim(files$cts1, delim="|")
cts1post <- readr::read_delim(files$cts2, delim="|")
cts2pre <- readr::read_delim(files$cts3, delim="|")
cts2post <- readr::read_delim(files$cts4, delim="|")
# set 1
# mean deaths per day prior to 21 August 2019
mu1pre <- round(mean(cts1pre$n))
# mean deaths per day following 21 August 2019
mu1post <- round(mean(cts1post$n))
#test
res1 <-poisson.test(mu1pre, 1, mu1post, alternative = "g", conf.level = 0.95)
res1
# set 2
# mean deaths per day prior to 21 August 2019
mu2pre <- round(mean(cts2pre$n))
# mean deaths per day following 21 August 2019
mu2post <- round(mean(cts2post$n))
#test
res2 <- poisson.test(mu2pre, 1, mu2post, alternative = "g", conf.level = 0.95)
res2
install.packages("bookdown")
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,readr,assertr, ggplot2,scales,incidence,exactci)
files <- list(input1=here::here("HRDAGblog_JR/clean/output/death1_clean.txt"),
input2=here::here("HRDAGblog_JR/clean/output/death2_clean.txt"))
stopifnot(is.list(files)== TRUE)
death1 <- readr::read_delim(files$input1, delim="|")
setwd("~/HRDAGblog_JR")
setwd("~/HRDAGblog_JR")
