min(flu1$age, na.rm=T)
max(flu1$age, na.rm=T)
knitr::opts_chunk$set(echo = TRUE)
counts <- count(flu1, flu1$DOD)
counts
mucpd1 <- mean(counts$n)
mucpd1
#mean number of cases/day in set 1
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
counts1
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#max number of cases/day
maxflu1 <-max(counts1$n)
maxflu1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
#max number of cases/day
maxflu2 <-max(counts2$n)
maxflu2
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#max number of cases/day
maxflu1 <-max(counts1$n)
maxflu1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
#max number of cases/day
maxflu2 <-max(counts2$n)
maxflu2
#set 1
100*(ppois(maxflu1, mucpd1, lower.tail = FALSE))
#set 1
100*(ppois(maxflu2, mucpd2, lower.tail = FALSE))
like1 <- 100*(ppois(maxflu1, mucpd1, lower.tail = FALSE))
like1
like2
like2 <- 100*(ppois(maxflu2, mucpd2, lower.tail = FALSE))
like2
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#max number of cases/day
maxflu1 <-max(counts1$n)
maxflu1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
#max number of cases/day
maxflu2 <-max(counts2$n)
maxflu2
#set 1
poisson.exact(maxflu1, mucpd1, lower.tail = FALSE))
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#max number of cases/day
maxflu1 <-max(counts1$n)
maxflu1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
#max number of cases/day
maxflu2 <-max(counts2$n)
maxflu2
#set 1
poisson.exact(maxflu1, mucpd1, lower.tail = FALSE)
install.packages("exactci")
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2, scales, DataExplorer, exactci)
require(here, assertr)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
knitr::opts_chunk$set(echo = TRUE)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2, scales, DataExplorer, exactci)
require(here, assertr)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
detach("package:assertr", unload = TRUE)
library(assertr)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2, scales, DataExplorer, exactci)
require(here, assertr)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,
forcats,readr,janitor,
assertr, ggplot2, lubridate
scales, DataExplorer, exactci)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,
forcats,readr,janitor,
assertr, ggplot2, lubridate,
scales, DataExplorer, exactci)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,
forcats,readr,janitor,
assertr, ggplot2, lubridate,
scales, DataExplorer, exactci)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
require (pacman)
pacman::p_load(dplyr,styler,tidyverse,
forcats,readr,janitor,
assertr, ggplot2, lubridate,
scales, DataExplorer, incidence,
exactci)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
getmode <- function(v) {
uniqv <- unique(v)
uniqv[which.max(tabulate(match(v, uniqv)))]
}
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y"))
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y"))
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,
color = "black")) +
coord_fixed(ratio=2)
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y"))
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1,
color = "black")) +
coord_fixed(ratio=2)
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y"))
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot1
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot1
#remove notflu cases
flu2 <- filter(flu2, status == "flu")
flu2$DOD<- as.Date(flu2$DOD)
stopifnot(is.Date(flu2$DOD))
# compute daily incidence
date_case2<- incidence(flu2$DOD, interval = 1 )
epiplot2<-
plot(date_case2, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y")) +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot2
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#max number of cases/day
maxflu1 <-max(counts1$n)
maxflu1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
#max number of cases/day
maxflu2 <-max(counts2$n)
maxflu2
#set 1
poisson.exact(maxflu1, mucpd1, lower.tail = FALSE)
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
mucpd1
#max number of cases/day
maxflu1 <-max(counts1$n)
maxflu1
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
mucpd2
#max number of cases/day
maxflu2 <-max(counts2$n)
maxflu2
#set 1
poisson.exact(maxflu1, mucpd1, alternative = "g")
#set 1
poisson.exact(maxflu2, mucpd2, alternative = "g")
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
#max number of cases/day
maxflu1 <-max(counts1$n)
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
#max number of cases/day
maxflu2 <-max(counts2$n)
#set 1
poisson.test(mucpd1, 1, maxflu1, alternative = "g")
poisson.test(round(mucpd1), 1, round(maxflu1), alternative = "g")
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
#max number of cases/day
maxflu1 <-max(counts1$n)
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
#max number of cases/day
maxflu2 <-max(counts2$n)
#set 1
poisson.test(round(mucpd1), 1, round(maxflu1), alternative = "g")
#set 1
poisson.test(round(mucpd2), 1, round(maxflu2), alternative = "g")
mucpd1
maxflu1
mucpd2
maxflu2
ppois(4, mucpd1, lower.tail=FALSE)
ppois(6, mucpd2, lower.tail=FALSE)
100*ppois(6, mucpd2, lower.tail=FALSE)
likegte5 <- 100*qpois(4, mucpd1, lower.tail=FALSE)
likegte5
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
#max number of cases/day
maxflu1 <-max(counts1$n)
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
#max number of cases/day
maxflu2 <-max(counts2$n)
#set 1
likegte5 <- 100*ppois(maxflu1, mucpd1, lower.tail=FALSE)
likegte6 <- 100*ppois(maxflu2, mucpd2, lower.tail=FALSE)
poisson.test(round(mucpd1), 1, round(maxflu1), alternative = "g")
#set 1
poisson.test(round(mucpd2), 1, round(maxflu2), alternative = "g")
likegte5
likegte6
maxflu2
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
#max number of cases/day
maxflu1 <-max(counts1$n)
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
#max number of cases/day
maxflu2 <-max(counts2$n)
#set 1
100*ppois(maxflu1, mucpd1, lower.tail=FALSE)
poisson.test(round(mucpd1), 1, round(maxflu1), alternative = "g")
#set2
100*ppois(maxflu2, mucpd2, lower.tail=FALSE)
poisson.test(round(mucpd2), 1, round(maxflu2), alternative = "g")
#add in counts of zero for days on which no cases were reported
#set1
#mean number of cases/day
counts1 <- count(flu1, flu1$DOD)
mucpd1 <- mean(counts1$n)
#max number of cases/day
maxflu1 <-max(counts1$n)
#mean number of cases /day in set 2
counts2 <- count(flu2, flu2$DOD)
mucpd2 <- mean(counts2$n)
#max number of cases/day
maxflu2 <-max(counts2$n)
#set 1
ppois(maxflu1, mucpd1, lower.tail=FALSE)
poisson.test(round(mucpd1), 1, round(maxflu1), alternative = "g")
#set2
ppois(maxflu2, mucpd2, lower.tail=FALSE)
poisson.test(round(mucpd2), 1, round(maxflu2), alternative = "g")
