clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2)
require(here, assertr, pacman)
theme_classic()
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
require(here, assertr, pacman)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
setwd("~/HRDAGblog_JR/write/src")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
DODarray<-as.array(flu1$DOD, na.rm=FALSE)
table(DODarray)
ggsave("graph/output/epic_DOD.png", plot=last_plot(), dpi= 600)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2)
require(here, assertr, pacman)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
DODarray<-as.array(flu1$DOD, na.rm=FALSE)
table(DODarray)
ggsave("graph/output/epic_DOD.png", plot=last_plot(), dpi= 600)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
DODarray<-as.array(flu1$DOD, na.rm=FALSE)
table(DODarray)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
ggsave(filename = "output/epicurve_first.png", plot=last_plot(), dpi= 400)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
ggsave(filename = "output/epicurve_first.png", plot=last_plot(), dpi= 10)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
ggsave(filename = "write/output/epicurve_first.png", plot=last_plot(), dpi= 10)
flu1$DOD<- as.Date(flu1$DOD)
knitr::opts_chunk$set(echo = TRUE)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2)
require(here, assertr, pacman)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor) %>%
filter_all(status == "Not_flu") %>%
write_delim(files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor) %>%
filter_all(status == "Not_flu") %>%
write_delim(files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
#!/usr/bin/env Rscript --vanilla
# set expandtab ft=R ts=4 sw=4 ai fileencoding=utf-8
#
# Author: JR
# Maintainer(s): JR, PB
# License: (c) HRDAG 2019, GPL v2 or newer
#
# -----------------------------------------------------------
# HRDAGblog_JR/clean/src/clean.R
#
require(pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr)
require(here, assertr)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor) %>%
filter_all(status == "Not_flu") %>%
write_delim(files$output1, delim="|", na= "NA")
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,Sex,Status), as.factor) %>%
filter_all(status == "Not_flu") %>%
write_delim(files$output1, delim="|", na= "NA")
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,Status), as.factor) %>%
filter_all(status == "Not_flu") %>%
write_delim(files$output1, delim="|", na= "NA")
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor) %>%
filter_all(status == "Not_flu") %>%
write_delim(files$output1, delim="|", na= "NA")
knitr::opts_chunk$set(echo = TRUE)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2)
require(here, assertr, pacman)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
#remove notflu cases in each dataset
flu1 %>%
filter(status == "Flu", na.rm=TRUE)
flu1 %>%
filter_if(status == "Flu")
flu1
flu1 %>%
filter_if(status == "flu")
flu1 %>%
filter_if(flu1$status == "flu")
flu1 %>%
filter_if(~all(status == "flu"))
flu1 %>%
filter(status == "flu")
flu1
flu1 %>%
filter(status == "Not_flu")
#remove notflu cases in each dataset
flu1 %>%
filter(status == "flu")
flu2 %>%
filter(status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
#remove notflu cases in each dataset
flu1 <- filter(flu1, status == "flu")
flu2 <- filter(flu2, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case<- incidence(flu1$DOD, interval = 1 )
epiplot<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot1
#remove notflu cases
flu2 <- filter(flu2, status == "flu")
flu2$DOD<- as.Date(flu2$DOD)
stopifnot(is.Date(flu2$DOD))
# compute daily incidence
date_case2<- incidence(flu2$DOD, interval = 1 )
epiplot2<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot2
knitr::opts_chunk$set(echo = TRUE)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2)
require(here, assertr, pacman)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot1
#remove notflu cases
flu2 <- filter(flu2, status == "flu")
flu2$DOD<- as.Date(flu2$DOD)
stopifnot(is.Date(flu2$DOD))
# compute daily incidence
date_case2<- incidence(flu2$DOD, interval = 1 )
epiplot2<-
plot(date_case2, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot2
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot1
#remove notflu cases
flu2 <- filter(flu2, status == "flu")
flu2$DOD<- as.Date(flu2$DOD)
stopifnot(is.Date(flu2$DOD))
# compute daily incidence
date_case2<- incidence(flu2$DOD, interval = 1 )
epiplot2<-
plot(date_case2, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
theme_grey() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, color = "black")) +
coord_fixed(ratio=2)
epiplot2
#remove notflu cases
flu1 <- filter(flu1, status == "flu")
flu1$DOD<- as.Date(flu1$DOD)
stopifnot(is.Date(flu1$DOD))
# compute daily incidence
date_case1<- incidence(flu1$DOD, interval = 1 )
epiplot1<-
plot(date_case1, border = "white", show_cases=TRUE,
ylab = "Reported Cases", xlab= "Date") +
scale_x_date(labels = date_format("%d %b %Y"))
install.packages("scales")
install.packages("scales")
install.packages("scales")
knitr::opts_chunk$set(echo = TRUE)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2, scales)
require (pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2, scales)
require(here, assertr)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
require (pacman)
p_load(dplyr,styler,tidyverse,forcats,readr,janitor,assertr, ggplot2, scales, DataExplorer)
require(here, assertr)
files <- list(input1=here::here("clean/input/flu_data_1_122219.txt"),
input2=here::here("clean/input/flu_data_2_122219.txt"),
output1=here::here("clean/output/flu1_clean.txt"),
output2=here::here("clean/output/flu2_clean.txt"))
stopifnot(is.list(files)== TRUE)
#want to add in variables which are counts of the number of times each date occurs called cases/day here or do it just before graphing?
flu1 <- readr::read_delim(files$input1, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu1, files$output1, delim="|", na= "NA")
stopifnot(ncol(flu1) == 6 & (nrow (flu1) == 108))
flu2 <- readr::read_delim(files$input2, delim="|") %>%
clean_names() %>%
mutate(age = as.integer(age)) %>%
mutate(DOD = as.Date(`date`, "%m/%d/%Y")) %>%
mutate_at(vars(DOD,sex,status), as.factor)
write_delim(flu2,files$output2, delim="|", na= "NA")
stopifnot(ncol(flu2) == 6 & (nrow (flu2) == 974))
plot_missing(flu1)
plot_missing(flu2)
install.packages("assertr")
